apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
  #   deployment.kubernetes.io/revision: "1"
  labels:
    app: cts-nodejs
  name: cts-nodejs
  namespace: qed-kube-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cts-nodejs
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cts-nodejs
    spec:
      containers:
      - env:
        - name: NODEJS_HOST
          valueFrom:
            configMapKeyRef:
              name: cts-config
              key: NODEJS_HOST
        - name: NODEJS_PORT
          valueFrom:
            configMapKeyRef:
              name: cts-config
              key: NODEJS_PORT
        - name: REDIS_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: cts-config
              key: REDIS_HOSTNAME
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: cts-config
              key: REDIS_PORT
        image: ghcr.io/quanted/cts-nodejs:dev-kube
        imagePullPolicy: Always
        # image: cts-nodejs
        # imagePullPolicy: Never
        name: cts-nodejs
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
              - ls
              - /
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - ls
              - /
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
