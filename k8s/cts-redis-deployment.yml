apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cts-redis
  name: cts-redis
  namespace: qed-kube-dev
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    eks.amazonaws.com/compute-type: fargate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cts-redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cts-redis
    spec:
      containers:
      - image: ghcr.io/quanted/cts-redis:dev-kube
        imagePullPolicy: Always
      # - image: cts-redis
      #   imagePullPolicy: Never
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        name: cts-redis
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 30
        ports:
        - containerPort: 6379
          protocol: TCP
        # volumeMounts:
        # - mountPath: /etc/redis/database
        #   name: redis-pvolume
      imagePullSecrets:
        - name: glcr-auth
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      # volumes:
      # - name: redis-pvolume
      #   persistentVolumeClaim:
      #     claimName: redis-pvolume-claim1
