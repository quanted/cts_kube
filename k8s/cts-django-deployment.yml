apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cts-django
  name: cts-django
  namespace: qed-45-stg
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    eks.amazonaws.com/compute-type: fargate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cts-django
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cts-django
    spec:
      containers:
      - envFrom:
          - configMapRef:
              name: cts-config
        image: registry.epa.gov/qed/cyanweb_kube/cts-django:dev-gl
        imagePullPolicy: Always
        name: cts-django
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
              - ls
              - /
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - ls
              - /
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 10
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
          - mountPath: /src/cts_app/collected_static
            name: cts-collected-static
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      volumes:
      - name: cts-collected-static
        persistentVolumeClaim:
          claimName: cts-collected-static-pvolume-claim1
